name: MacOS Workflow

on:
  pull_request:
    branches: [ gcos4gnucobol-3.x ]
  push:
  # manual run in actions tab - for all branches
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          # - macos-latest-large  # macos 14, amd64
          - macos-latest        # macos 14, arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Configure git
        run: git config --global core.symlinks false

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install packages
        run: |
          brew install pkg-config automake libtool help2man texinfo bison berkeley-db@4 json-c
          opt="/opt/homebrew/opt"
          echo "$opt/pkg-config/bin" >> $GITHUB_PATH
          echo "LDFLAGS=-L$opt/berkeley-db@4/lib ${LDFLAGS}" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$opt/berkeley-db@4/include ${CPPFLAGS}" >> $GITHUB_ENV

      - name: Set git user
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions-bot@users.noreply.github.com

      - name: bootstrap
        run: |
          ./build_aux/bootstrap install

      - name: Build environment setup
        run: |
          mkdir _build
          echo "NPROC=`sysctl -n hw.ncpu`" >> $GITHUB_ENV
          export TERM="vt100"
          echo "TERM=$TERM" >> $GITHUB_ENV

      - name: configure
        run: |
          cd _build
          ../configure --enable-cobc-internal-checks \
                       --enable-hardening \
                       --prefix /opt/cobol/gnucobol-gcos \

      - name: Upload config.log
        uses: actions/upload-artifact@v4
        with:
          name: config-${{ matrix.os }}.log
          path: _build/config.log
        if: failure()

      - name: make
        run: |
          make -C _build --jobs=$((${NPROC}+1))

      # make install must be done before make check, otherwise
      # execution of generated COBOL files fail for a missing
      # /usr/local/lib/libcob.dylib
      - name: make install
        run: |
          sudo make -C _build install
          find /opt/cobol > _build/install.log

      - name: Upload install.log
        uses: actions/upload-artifact@v4
        with:
          name: install-${{ matrix.os }}.log
          path: _build/install.log

      - name: check
        run: |
          make -C _build check \
                         TESTSUITEFLAGS="--jobs=$((${NPROC}+1))"

      - name: Upload testsuite.log
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: testsuite-${{ matrix.os }}.log
          path: _build/tests/testsuite.log

      - name: Cache newcob.val.Z
        uses: actions/cache@v3
        id: newcob
        with:
          path: _build/tests/cobol85/newcob.val.Z.cached
          key: newcob

      - name: Download newcob.val.Z
        if: steps.newcob.outputs.cache-hit != 'true'
        run: |
          cd _build/tests/cobol85
          make newcob.val.Z
          ln -f newcob.val.Z newcob.val.Z.cached

      - name: NIST85 Test Suite
        run: |
          cd _build/tests/cobol85
          ln -f newcob.val.Z.cached newcob.val.Z
          make EXEC85 && make --jobs=$(($(nproc)+1)) test
